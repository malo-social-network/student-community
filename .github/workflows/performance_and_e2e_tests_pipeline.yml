name: Performance and E2E Tests Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  performance-and-e2e:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: student_community
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Install MySQL Client
        run: sudo apt-get install -y mysql-client

      - name: Set up Database Schema
        run: mysql -h 127.0.0.1 -u root -proot_password student_community < backend/init_db.sql

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci 

      - name: Start Backend
        run: |
          cd backend
          nohup npm start > backend.log 2>&1 &
          echo $! > ../backend.pid

      - name: Start Frontend
        run: |
          cd frontend
          nohup npm start > frontend.log 2>&1 &
          echo $! > ../frontend.pid

      - name: Download wait-for-it script
        run: |
          curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh

      - name: Wait for services to be ready
        run: |
          ./wait-for-it.sh localhost:5000 -t 60
          ./wait-for-it.sh localhost:3000 -t 60

#      - name: Wait for services to be ready
#        run: |
#          timeout 60s bash -c 'while ! nc -z localhost 5000; do sleep 1; done'
#          timeout 60s bash -c 'while ! nc -z localhost 3000; do sleep 1; done'

      - name: Run Backend Unit Tests
        run: |
          cd backend
          npm run test
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: root_password
          DB_NAME: student_community
          JWT_SECRET: your_jwt_secret

      - name: Install Playwright Browsers
        run: |
          cd frontend
          npx playwright install

      - name: Run Frontend E2E Tests
        run: |
          cd frontend
          npx playwright test
        env:
          BASE_URL: http://localhost:3000
          JWT_SECRET: 'your_secret_key'

      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg2
          curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
          echo "deb https://dl.k6.io/deb stable main" | sudo tee -a /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Run Performance Tests
        run: |
          k6 run performance/test.js

      - name: Stop services
        if: always()
        run: |
          if [ -f backend.pid ]; then kill $(cat backend.pid) || true; fi
          if [ -f frontend.pid ]; then kill $(cat frontend.pid) || true; fi

